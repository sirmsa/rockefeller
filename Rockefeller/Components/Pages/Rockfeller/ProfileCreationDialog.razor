<MudDialog @bind-IsVisible="IsVisible" Options="DialogOptions">
    <TitleContent>
        <MudText Typo="Typo.h6">Create New Trading Profile</MudText>
    </TitleContent>
    <DialogContent>
        <MudGrid>
            <MudItem xs="12" md="6">
                <MudTextField @bind-Value="NewProfile.Name"
                              Label="Profile Name"
                              Variant="Variant.Outlined"
                              Class="mb-3"
                              Required="true"/>
            </MudItem>
            <MudItem xs="12" md="6">
                <MudNumericField T="decimal" @bind-Value="NewProfile.MaxBudget"
                                 Label="Max Budget ($)"
                                 Variant="Variant.Outlined"
                                 Class="mb-3"
                                 Min="1000m" Max="1000000m" Step="1000m"
                                 Required="true"/>
            </MudItem>
        </MudGrid>
    </DialogContent>
    <DialogActions>
        <MudButton OnClick="OnCancel">Cancel</MudButton>
        <MudButton Color="Color.Primary" OnClick="OnSave">Save Profile</MudButton>
    </DialogActions>
</MudDialog>

@code {
    [Parameter] public bool IsVisible { get; set; }
    [Parameter] public EventCallback<bool> IsVisibleChanged { get; set; }
    [Parameter] public TradingProfile NewProfile { get; set; } = new();
    [Parameter] public EventCallback<TradingProfile> OnSaveRequested { get; set; }

    private DialogOptions DialogOptions => new() { CloseOnEscapeKey = true, MaxWidth = MaxWidth.Medium };

    private async Task OnCancel()
    {
        IsVisible = false;
        await IsVisibleChanged.InvokeAsync(false);
    }

    private async Task OnSave()
    {
        await OnSaveRequested.InvokeAsync(NewProfile);
        IsVisible = false;
        await IsVisibleChanged.InvokeAsync(false);
    }

}
