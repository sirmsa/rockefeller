@page "/weather"

<MudText Typo="Typo.h3" Class="mb-4">Weather Forecast</MudText>

<MudPaper Class="pa-4 mb-4" Elevation="2">
    <MudText Typo="Typo.h5" Class="mb-3">Sample Weather Data</MudText>
    
    <MudTable Items="@forecasts" Hover="true" Striped="true" Elevation="2">
        <HeaderContent>
            <MudTh>Date</MudTh>
            <MudTh>Temp. (C)</MudTh>
            <MudTh>Temp. (F)</MudTh>
            <MudTh>Summary</MudTh>
            <MudTh>Actions</MudTh>
        </HeaderContent>
        <RowTemplate>
            <MudTd DataLabel="Date">@context.Date.ToShortDateString()</MudTd>
            <MudTd DataLabel="Temp. (C)">@context.TemperatureC</MudTd>
            <MudTd DataLabel="Temp. (F)">@context.TemperatureF</MudTd>
            <MudTd DataLabel="Summary">
                <MudChip Color="@GetWeatherColor(context.Summary)" Size="Size.Small">
                    @context.Summary
                </MudChip>
            </MudTd>
            <MudTd DataLabel="Actions">
                <MudIconButton Icon="@Icons.Material.Filled.Info" Color="Color.Info" Size="Size.Small" />
            </MudTd>
        </RowTemplate>
    </MudTable>
</MudPaper>

<MudGrid>
    <MudItem xs="12" md="6">
        <MudPaper Class="pa-4" Elevation="2">
            <MudText Typo="Typo.h6" Class="mb-3">Weather Summary</MudText>
            <MudList>
                @foreach (var forecast in forecasts.Take(3))
                {
                    <MudListItem Icon="@GetWeatherIcon(forecast.Summary)">
                        <MudText Typo="Typo.body1">@forecast.Date.ToShortDateString()</MudText>
                        <MudText Typo="Typo.body2" Color="Color.Secondary">@forecast.Summary - @forecast.TemperatureCÂ°C</MudText>
                    </MudListItem>
                }
            </MudList>
        </MudPaper>
    </MudItem>
    
    <MudItem xs="12" md="6">
        <MudPaper Class="pa-4" Elevation="2">
            <MudText Typo="Typo.h6" Class="mb-3">Quick Actions</MudText>
            <MudStack Spacing="2">
                <MudButton Variant="Variant.Filled" Color="Color.Primary" FullWidth="true" StartIcon="@Icons.Material.Filled.Refresh">
                    Refresh Data
                </MudButton>
                <MudButton Variant="Variant.Outlined" Color="Color.Secondary" FullWidth="true" StartIcon="@Icons.Material.Filled.Settings">
                    Settings
                </MudButton>
            </MudStack>
        </MudPaper>
    </MudItem>
</MudGrid>

@code {
    private WeatherForecast[] forecasts = new[]
    {
        new WeatherForecast { Date = DateTime.Now.AddDays(0), TemperatureC = 20, Summary = "Sunny" },
        new WeatherForecast { Date = DateTime.Now.AddDays(1), TemperatureC = 18, Summary = "Cloudy" },
        new WeatherForecast { Date = DateTime.Now.AddDays(2), TemperatureC = 22, Summary = "Rainy" },
        new WeatherForecast { Date = DateTime.Now.AddDays(3), TemperatureC = 25, Summary = "Sunny" },
        new WeatherForecast { Date = DateTime.Now.AddDays(4), TemperatureC = 19, Summary = "Partly Cloudy" }
    };

    private Color GetWeatherColor(string summary)
    {
        return summary switch
        {
            "Sunny" => Color.Warning,
            "Cloudy" => Color.Default,
            "Rainy" => Color.Info,
            "Partly Cloudy" => Color.Secondary,
            _ => Color.Default
        };
    }

    private string GetWeatherIcon(string summary)
    {
        return summary switch
        {
            "Sunny" => Icons.Material.Filled.WbSunny,
            "Cloudy" => Icons.Material.Filled.Cloud,
            "Rainy" => Icons.Material.Filled.Opacity,
            "Partly Cloudy" => Icons.Material.Filled.CloudQueue,
            _ => Icons.Material.Filled.Cloud
        };
    }

    public class WeatherForecast
    {
        public DateTime Date { get; set; }
        public int TemperatureC { get; set; }
        public int TemperatureF => 32 + (int)(TemperatureC / 0.5556);
        public string Summary { get; set; } = string.Empty;
    }
}
